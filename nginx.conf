limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;
limit_req_status 429;

# Заглушка — блокирует доступ по IP (default_server)
server {
    listen 80 default_server;
    listen 443 ssl default_server;

    ssl_certificate /etc/letsencrypt/live/hits-ad.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hits-ad.ru/privkey.pem;

    return 444;  # Мгновенно разрывает соединение
}

# HTTP -> HTTPS + Let's Encrypt валидация
server {
    listen 80;
    server_name hits-ad.ru;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Основной HTTPS-блок
server {
    listen 443 ssl;
    server_name hits-ad.ru;

    ssl_certificate /etc/letsencrypt/live/hits-ad.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hits-ad.ru/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Только разрешённый домен
    if ($host != "hits-ad.ru") {
        return 444;
    }

    # Кастомная страница для ошибки 429 (Too Many Requests)
    error_page 429 /too_many_requests;
    location = /too_many_requests {
        default_type text/html;
        return 429 '<!DOCTYPE html>
        <html>
        <head>
            <title>429 Too Many Requests</title>
            <style>
                body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
                h1 { color: #d9534f; }
            </style>
        </head>
        <body>
            <h1>429 Too Many Requests</h1>
            <p>Вы отправляете слишком много запросов. Пожалуйста, попробуйте позже.</p>
        </body>
        </html>';
    }

    # Ограничение запросов для основного location
    location / {
        limit_req zone=req_limit_per_ip burst=10 nodelay;
        proxy_pass http://react-app:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API без ограничений
    location /api/ {
        proxy_pass http://webapi:8080/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket без ограничений
    location /ws/ {
        proxy_pass http://webapi:8080/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;

        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 60s;
        send_timeout 86400s;
    }

    # Защита Swagger UI
    location /swagger-ui/ {
        deny all;
    }
}